labs(title="Year-End Points by Fantasy Points within a game (TE)", x="Fantasy Points within a game", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.4)) +
geom_point(color="darkorchid2") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess", color="black") +
labs(title="Year-End Points by Fantasy Points within Consecutive Games (TE)", x="Average Fantasy Points within consecutive games", y="Year-End Fantasy Points")
ggplot(big_trios, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.4)) +
geom_point(color="darkorchid3") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess", color="black") +
labs(title="Year-End Points by Fantasy Points within a Triplet of Games (TE)", x="Average Fantasy Points within a Triplet of games", y="Year-End Fantasy Points")
ggplot(big_half, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=1)) +
geom_point(color="darkorchid4") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess", color="black") +
labs(title="Year-End Points by Fantasy Points in First Half of Season (TE)", x="Average Fantasy Points in First Half of season", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=fantasyPts.x, y=fantasyPts.y)) +
geom_smooth(data=big_association, method="loess", se=F, color="violet", linewidth=1.25) +
geom_smooth(data=big_pairs, method="loess", se=F, color="darkorchid2", linewidth=1.25) +
geom_smooth(data=big_trios, method="loess", se=F, color="darkorchid3", linewidth=1.25) +
geom_smooth(data=big_half, method="loess", se=F, color="darkorchid4", linewidth=1.25) +
labs(title="Year-End Points by Subsets of Combined games (TE)", x="Avg Fantasy Points in set of games (1,2,3,half)", y="Year-End Fantasy Points")
cor1 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_association$recRec, big_association$fantasyPts.y),
cor(big_association$recYds, big_association$fantasyPts.y),
cor(big_association$recTds, big_association$fantasyPts.y)))
cor2 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_pairs$recRec, big_pairs$fantasyPts.y),
cor(big_pairs$recYds, big_pairs$fantasyPts.y),
cor(big_pairs$recTds, big_pairs$fantasyPts.y)))
cor3 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_trios$recRec, big_trios$fantasyPts.y),
cor(big_trios$recYds, big_trios$fantasyPts.y),
cor(big_trios$recTds, big_trios$fantasyPts.y)))
cor4 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_half$recRec, big_half$fantasyPts.y),
cor(big_half$recYds, big_half$fantasyPts.y),
cor(big_half$recTds, big_half$fantasyPts.y)))
data <- data.frame(variable=c("recRec", "recYds", "recTds"),
OneWeek=cor1$correlation,
TwoWeeks=cor2$correlation,
ThreeWeeks=cor3$correlation,
FirstHalf=cor4$correlation)
data <- pivot_longer(data, cols=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"), names_to="subset", values_to="correlation") #pivoting the data to a longer format to better plot the relationships
data$subset <- factor(data$subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf")) #assigning levels to the subsets to plot them in order
#data
ggplot(data) +
geom_col(aes(x=subset, y=correlation, fill=variable)) +
labs(title="Correlation of Fantasy Points with Year-End Points (TE)", x="", y="Collective Correlation with Year-End Points")
model1 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_association)
model1_sum <- summary(model1)
model2 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_pairs)
model2_sum <- summary(model2)
model3 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_trios)
model3_sum <- summary(model3)
model4 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_half)
model4_sum <- summary(model4)
data <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(model1_sum$adj.r.squared,
model2_sum$adj.r.squared,
model3_sum$adj.r.squared,
model4_sum$adj.r.squared))
data$Subset <- factor(data$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(data) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Points Model Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
data <- big_association %>%
select(-c()) #creating a dataset to make a model
all <- lm(fantasyPts.y ~ ., data=data) #making a model with every variable in the given dataset
step_model1 <- step(all, direction = "backward", trace=0) #using a backwards stepwise process to simplify the given model
step_model1_sum <- summary(step_model1)
data <- big_pairs %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
step_model2 <- step(all, direction = "backward", trace=0)
step_model2_sum <- summary(step_model2)
data <- big_trios %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
step_model3 <- step(all, direction = "backward", trace=0)
step_model3_sum <- summary(step_model3)
data <- big_half %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
step_model4 <- step(all, direction = "backward", trace=0)
step_model4_sum <- summary(step_model4)
data <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(step_model1_sum$adj.r.squared,
step_model2_sum$adj.r.squared,
step_model3_sum$adj.r.squared,
step_model4_sum$adj.r.squared))
data$Subset <- factor(data$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(data) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Stepwise Regression Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
comp1 <- anova(model1, step_model1)
comp2 <- anova(model2, step_model2)
comp3 <- anova(model3, step_model3)
comp4 <- anova(model4, step_model4)
pca_variables <- c('fantasyPts.y', 'rzRecTdPct', 'ezRecTdPct') #top contributors to the first PCs
sum_cor_variables <- c('fantasyPts.x', 'recTds', 'rzRecTds') #top contributors to the cumulative correlation
one_cor_variables <- c(comatrix1$colnames[1:3]) #intra-week points correlation: correlations with the given week's points
two_cor_variables <- c(comatrix2$colnames[1:3]) #intra-week points correlation
three_cor_variables <- c(comatrix3$colnames[1:3]) #intra-week points correlation
half_cor_variables <- c(comatrix4$colnames[1:3]) #intra-week points correlation
year_end_cor_variables <- c(comatrix5$colnames[1:8]) #inter-week points correlation: correlation with the year-end points
reduced_v <- colnames(big_association) %in% c(pca_variables, sum_cor_variables, one_cor_variables, two_cor_variables, three_cor_variables, half_cor_variables, year_end_cor_variables) #creating a mask based off multiple standards to reduce the data's dimensions
reduced <- colnames(big_association)[reduced_v]
red_model1 <- lm(fantasyPts.y ~ ., data=big_association[,reduced])
red_model1_sum <- summary(red_model1)
red_model2 <- lm(fantasyPts.y ~ ., data=big_pairs[,reduced])
red_model2_sum <- summary(red_model2)
red_model3 <- lm(fantasyPts.y ~ ., data=big_trios[,reduced])
red_model3_sum <- summary(red_model3)
red_model4 <- lm(fantasyPts.y ~ ., data=big_half[,reduced])
red_model4_sum <- summary(red_model4)
comp5 <- anova(red_model1, step_model1)
comp6 <- anova(red_model2, step_model2)
comp7 <- anova(red_model3, step_model3)
comp8 <- anova(red_model4, step_model4)
step_model1_sum
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted_single=predicted_single, single_end)
data2 <- data.frame(predicted_pairs=predicted_pairs, pairs_end)
data3 <- data.frame(predicted_trios=predicted_trios, trios_end)
data4 <- data.frame(predicted_half=predicted_half, half_end)
ggplot(data) +
geom_smooth(aes(x=predicted_single, y=single_end, se=T, fill="violet")) +
geom_smooth(aes(x=predicted_pairs, y=pairs_end, se=T, fill="darkorchid2")) +
geom_smooth(aes(x=predicted_trios, y=trios_end, se=T, fill="darkorchid3")) +
geom_amooth(aes(x=predicted_half, y=half_end, se=T, fill="darkorchid4"))
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted_single=predicted_single, single_end)
data2 <- data.frame(predicted_pairs=predicted_pairs, pairs_end)
data3 <- data.frame(predicted_trios=predicted_trios, trios_end)
data4 <- data.frame(predicted_half=predicted_half, half_end)
ggplot(data) +
geom_smooth(aes(x=predicted_single, y=single_end, se=T, fill="violet")) +
geom_smooth(aes(x=predicted_pairs, y=pairs_end, se=T, fill="darkorchid2")) +
geom_smooth(aes(x=predicted_trios, y=trios_end, se=T, fill="darkorchid3")) +
geom_smooth(aes(x=predicted_half, y=half_end, se=T, fill="darkorchid4"))
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(aes(x=predicted, y=real)) +
geom_smooth(data=data1 se=T, fill="violet") +
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, fill="violet") +
geom_smooth(data=data2, se=T, fill="darkorchid2") +
geom_smooth(daat=data3, se=T, fill="darkorchid3") +
geom_smooth(data=data4, se=T, fill="darkorchid4")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, fill="violet") +
geom_smooth(data=data2, se=T, fill="darkorchid2") +
geom_smooth(daat=data3, se=T, fill="darkorchid3") +
geom_smooth(data=data4, se=T, fill="darkorchid4")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, fill="violet") +
geom_smooth(data=data2, se=T, fill="darkorchid2") +
geom_smooth(data=data3, se=T, fill="darkorchid3") +
geom_smooth(data=data4, se=T, fill="darkorchid4")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", fill="violet") +
geom_smooth(data=data2, se=T, method="lm", fill="darkorchid2") +
geom_smooth(data=data3, se=T, method="lm", fill="darkorchid3") +
geom_smooth(data=data4, se=T, method="lm", fill="darkorchid4")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25)
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=0, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", fill="violet", linewidth=0, fullrange=T) +
geom_smooth(data=data2, se=T, method="lm", fill="darkorchid2", linewidth=0, fullrange=T) +
geom_smooth(data=data3, se=T, method="lm", fill="darkorchid3", linewidth=0, fullrange=T) +
geom_smooth(data=data4, se=T, method="lm", fill="darkorchid4", linewidth=0, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", fill="violet", linewidth=0) +
geom_smooth(data=data2, se=T, method="lm", fill="darkorchid2", linewidth=0) +
geom_smooth(data=data3, se=T, method="lm", fill="darkorchid3", linewidth=0) +
geom_smooth(data=data4, se=T, method="lm", fill="darkorchid4", linewidth=0) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", color="violet", fill="violet", linewidth=0) +
geom_smooth(data=data2, se=T, method="lm", color="darkorchid2", fill="darkorchid2", linewidth=0) +
geom_smooth(data=data3, se=T, method="lm", color="darkorchid3", fill="darkorchid3", linewidth=0) +
geom_smooth(data=data4, se=T, method="lm", color="darkorchid4", fill="darkorchid4", linewidth=0) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", color="violet", fill="violet", linewidth=0, level=.99) +
geom_smooth(data=data2, se=T, method="lm", color="darkorchid2", fill="darkorchid2", linewidth=0, level=.99) +
geom_smooth(data=data3, se=T, method="lm", color="darkorchid3", fill="darkorchid3", linewidth=0, level=.99) +
geom_smooth(data=data4, se=T, method="lm", color="darkorchid4", fill="darkorchid4", linewidth=0, level=.99) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
single_end
summary(single_end)
summary(predicted_end)
summary(predicted_single)
summary(predicted_half)
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", color="violet", fill="violet", linewidth=0, level=.99) +
geom_smooth(data=data2, se=T, method="lm", color="darkorchid2", fill="darkorchid2", linewidth=0, level=.99) +
geom_smooth(data=data3, se=T, method="lm", color="darkorchid3", fill="darkorchid3", linewidth=0, level=.99) +
geom_smooth(data=data4, se=T, method="lm", color="darkorchid4", fill="darkorchid4", linewidth=0, level=.99) +
lims(x=c(0, NA), y=c(0, NA))
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points with SE of 99%", y="Real Total Points")
newdata <- big_association[, -49]
single_end <- big_association[, 49]
predicted_single <- predict(step_model1, newdata, level="confidence")
newdata <- big_pairs[, -49]
pairs_end <- big_pairs[, 49]
predicted_pairs <- predict(step_model1, newdata, level="confidence")
newdata <- big_trios[, -49]
trios_end <- big_trios[, 49]
predicted_trios <- predict(step_model1, newdata, level="confidence")
newdata <- big_half[, -49]
half_end <- big_half[, 49]
predicted_half <- predict(step_model1, newdata, level="confidence")
data1 <- data.frame(predicted=predicted_single, real=single_end)
data2 <- data.frame(predicted=predicted_pairs, real=pairs_end)
data3 <- data.frame(predicted=predicted_trios, real=trios_end)
data4 <- data.frame(predicted=predicted_half, real=half_end)
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=F, method="lm", color="violet", linewidth=1.25, fullrange=T) +
geom_smooth(data=data2, se=F, method="lm", color="darkorchid2", linewidth=1.25, fullrange=T) +
geom_smooth(data=data3, se=F, method="lm", color="darkorchid3", linewidth=1.25, fullrange=T) +
geom_smooth(data=data4, se=F, method="lm", color="darkorchid4", linewidth=1.25, fullrange=T) +
lims(x=c(0, NA), y=c(0, NA)) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points", y="Real Total Points")
ggplot(data1, aes(x=predicted, y=real)) +
geom_smooth(data=data1, se=T, method="lm", color="violet", fill="violet", linewidth=0, level=.99) +
geom_smooth(data=data2, se=T, method="lm", color="darkorchid2", fill="darkorchid2", linewidth=0, level=.99) +
geom_smooth(data=data3, se=T, method="lm", color="darkorchid3", fill="darkorchid3", linewidth=0, level=.99) +
geom_smooth(data=data4, se=T, method="lm", color="darkorchid4", fill="darkorchid4", linewidth=0, level=.99) +
lims(x=c(0, NA), y=c(0, NA)) +
labs(title="Fantasy Points Based on Predicted Fantasy Points (TE)", x="Predicted Points with SE of 99%", y="Real Total Points")
install.packages(c("curl", "data.table", "ggiraph", "ggplot2", "lava", "parallelly", "RcppEigen", "rmarkdown", "shape", "xfun"))
install.packages(c("curl", "data.table", "ggiraph", "ggplot2", "lava", "parallelly", "RcppEigen", "rmarkdown", "shape", "xfun"))
tinytex::install_tinytex()
