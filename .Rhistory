filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio1_22 <- rbind(wk1_22, wk2_22, wk3_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio2_22 <- rbind(wk2_22, wk3_22, wk4_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio3_22 <- rbind(wk3_22, wk4_22, wk5_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio4_22 <- rbind(wk4_22, wk5_22, wk6_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio5_22 <- rbind(wk5_22, wk6_22, wk7_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio6_22 <- rbind(wk6_22, wk7_22, wk8_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio7_22 <- rbind(wk7_22, wk8_22, wk9_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio8_22 <- rbind(wk8_22, wk9_22, wk10_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio9_22 <- rbind(wk9_22, wk10_22, wk11_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio10_22 <- rbind(wk10_22, wk11_22, wk12_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio11_22 <- rbind(wk11_22, wk12_22, wk13_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio12_22 <- rbind(wk12_22, wk13_22, wk14_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio13_22 <- rbind(wk13_22, wk14_22, wk15_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio14_22 <- rbind(wk14_22, wk15_22, wk16_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio15_22 <- rbind(wk15_22, wk16_22, wk17_22) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio1_21 <- rbind(wk1_21, wk2_21, wk3_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio2_21 <- rbind(wk2_21, wk3_21, wk4_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio3_21 <- rbind(wk3_21, wk4_21, wk5_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio4_21 <- rbind(wk4_21, wk5_21, wk6_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio5_21 <- rbind(wk5_21, wk6_21, wk7_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio6_21 <- rbind(wk6_21, wk7_21, wk8_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio7_21 <- rbind(wk7_21, wk8_21, wk9_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio8_21 <- rbind(wk8_21, wk9_21, wk10_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio9_21 <- rbind(wk9_21, wk10_21, wk11_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio10_21 <- rbind(wk10_21, wk11_21, wk12_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio11_21 <- rbind(wk11_21, wk12_21, wk13_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio12_21 <- rbind(wk12_21, wk13_21, wk14_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio13_21 <- rbind(wk13_21, wk14_21, wk15_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio14_21 <- rbind(wk14_21, wk15_21, wk16_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio15_21 <- rbind(wk15_21, wk16_21, wk17_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
trios_23 <- rbind(weeks_trio1_23,weeks_trio2_23,weeks_trio3_23,weeks_trio4_23,weeks_trio5_23,weeks_trio6_23,weeks_trio7_23,weeks_trio8_23,weeks_trio9_23,weeks_trio10_23,
weeks_trio11_23,weeks_trio12_23,weeks_trio13_23,weeks_trio14_23,weeks_trio15_23)
trios_23 <- merge(trios_23, total_23, by="player", all=T, suffixes=c(".x", ".y"))
trios_22 <- rbind(weeks_trio1_22,weeks_trio2_22,weeks_trio3_22,weeks_trio4_22,weeks_trio5_22,weeks_trio6_22,weeks_trio7_22,weeks_trio8_22,weeks_trio9_22,weeks_trio10_22,
weeks_trio11_22,weeks_trio12_22,weeks_trio13_22,weeks_trio14_22,weeks_trio15_22)
trios_22 <- merge(trios_22, total_22, by="player", all=T, suffixes=c(".x", ".y"))
trios_21 <- rbind(weeks_trio1_21,weeks_trio2_21,weeks_trio3_21,weeks_trio4_21,weeks_trio5_21,weeks_trio6_21,weeks_trio7_21,weeks_trio8_21,weeks_trio9_21,weeks_trio10_21,
weeks_trio11_21,weeks_trio12_21,weeks_trio13_21,weeks_trio14_21,weeks_trio15_21)
trios_21 <- merge(trios_21, total_21, by="player", all=T, suffixes=c(".x", ".y"))
big_trios <- rbind(trios_23, trios_22, trios_21) %>%
select(-c(player)) %>%
na.omit() %>%
round(2)
#glimpse(big_trios)
half_23 <- rbind(wk1_23,wk2_23,wk3_23,wk4_23,wk5_23,wk6_23,wk7_23,wk8_23,wk9_23) %>%
group_by(player) %>%
filter(n() >= 5) %>%
summarise(across(.fns=mean))
half_23 <- merge(half_23, total_23, by="player", all=T, suffixes=c(".x", ".y"))
half_22 <- rbind(wk1_22,wk2_22,wk3_22,wk4_22,wk5_22,wk6_22,wk7_22,wk8_22,wk9_22) %>%
group_by(player) %>%
filter(n() >= 5) %>%
summarise(across(.fns=mean))
half_22 <- merge(half_22, total_22, by="player", all=T, suffixes=c(".x", ".y"))
half_21 <- rbind(wk1_21,wk2_21,wk3_21,wk4_21,wk5_21,wk6_21,wk7_21,wk8_21,wk9_21) %>%
group_by(player) %>%
filter(n() >= 5) %>%
summarise(across(.fns=mean))
half_21 <- merge(half_21, total_21, by="player", all=T, suffixes=c(".x", ".y"))
big_half <- rbind(half_23, half_22, half_21) %>%
select(-c(player)) %>%
na.omit() %>%
round(2)
#glimpse(big_half)
pca <- prcomp(big_association) #perform PCA on weekly data
summary <- summary(pca) #shows the cumulative proportion of each Principal Component (PC4 > 0.85)
loadings <- arrange(round(data.frame(pca$rotation)[1:4], 3), desc(PC1)) #show the loadings of the first four Principal Components (PCs)
eigenvalues <- pca$sdev^2 #extract the eigenvalues
contribution <- arrange(round((loadings^2)*eigenvalues, 3), desc(PC1)) #show the contributions of each variable towards the given Principal Component
contribution <- round(mutate(contribution, sum=PC1*0.3801 + PC2*0.3031 + PC3*0.1089 + PC4*0.0626), 3) #add a summation column to show the weight of each variable in the first four PCs
#contribution
df <- select(big_association, -c(rushYds100Games, rushTd40s)) #create a data frame that excludes two variables containing NA values
cor_matrix <- data.frame(cor(df)) #convert df into correlation matrix
summed_cor <- data.frame(sum=rowSums(cor_matrix)) #sum all rows
summed_cor <- arrange(round(summed_cor, 3), desc(sum))
summed_cor
cv <- function(x) {           #Coefficient of Variation, a relative measure of variation dependent upon a variable's average
m <- mean(x)
sd <- sd(x)
cv <- sd/m
return(cv)
}
mode <- function(x) { #mode function
x <- na.omit(x)
u <- unique(x)
mode <- u[which.max(tabulate(match(x, u)))] #find the most common record in the variable
return(mode)
}
skews <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skews), 3)) #skew measure for each variable
comatrix1 <- data.frame(colnames=colnames, cor.x=cor.x, varco=varco, skew=skew) %>% arrange(desc(cor.x))
#comatrix1
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))
varco <- c(round(apply(big_pairs, 2, cv), 3))
skew <- c(round(apply(big_pairs, 2, skews), 3))
comatrix2 <- data.frame(colnames=colnames, cor.x=cor.x, varco=varco, skew=skew) %>% arrange(desc(cor.x))
#comatrix2
colnames <- c(colnames(big_trios))
cor.x <- c(round(cor(big_trios, big_trios$fantasyPts.x, use="complete.obs"), 3))
varco <- c(round(apply(big_trios, 2, cv), 3))
skew <- c(round(apply(big_trios, 2, skews), 3))
comatrix3 <- data.frame(colnames=colnames, cor.x=cor.x, varco=varco, skew=skew) %>% arrange(desc(cor.x))
#comatrix3
colnames <- c(colnames(big_half))
cor.x <- c(round(cor(big_half, big_half$fantasyPts.x, use="complete.obs"), 3))
varco <- c(round(apply(big_half, 2, cv), 3))
skew <- c(round(apply(big_half, 2, skews), 3))
comatrix4 <- data.frame(colnames=colnames, cor.x=cor.x, varco=varco, skew=skew) %>% arrange(desc(cor.x))
#comatrix4
colnames <- c(colnames(big_association))
one <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))
two <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))
three <- c(round(cor(big_trios, big_trios$fantasyPts.y, use="complete.obs"), 3))
half <- c(round(cor(big_half, big_half$fantasyPts.y, use="complete.obs"), 3))
comatrix5 <- data.frame(colnames=colnames, One=one, Two=two, Three=three, First_Half=half) %>%
mutate(average=(One+Two+Three+First_Half)/4) %>%
arrange(desc(average)) %>%
filter(colnames!='fantasyPts.y')
#comatrix5
data <- big_association %>%
select(c(recRec, recYds, recTds, fantasyPts.x))
plot <- cor(data)
corrplot(plot, method = 'color', order = 'AOE', diag = FALSE) #creating a correlogram
ggplot(subset(big_association, recTds<3), aes(x=factor(recTds), y=fantasyPts.x)) +
geom_violin(fill="darkorchid4") +
labs(title="Receiving Tds and Fantasy Points (TE)", x="Receiving Touchdowns within game", y="Fantasy Points within game")
ggplot(big_association, aes(x=factor(recTarg), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Receiving Targets within a single game (TE)", x="Targets within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(x=factor(recRec), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Receptions within a single game (TE)", x="Receptions within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(x=factor(rzRecTarg), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Redzone Receiving Targets within a single game (TE)", x="Redzone Targets within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(x=factor(rzRecRec), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Redzone Receptions within a single game (TE)", x="Redzone Recpetions within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(fantasyPts.x)) +
geom_histogram(fill="violet") +
guides(fill="none") +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points within a Game Distribution (TE)", x="Fantasy Points within a game", y="", fill="")
ggplot(big_pairs, aes(fantasyPts.x)) +
geom_histogram(fill="darkorchid2") +
guides(fill="none") +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points within Consecutive Games Distribution (TE)", x="Average Fantasy Points within consecutive games", y="", fill="")
ggplot(big_trios, aes(fantasyPts.x)) +
geom_histogram(fill="darkorchid3") +
guides(fill="none") +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points within Triplet of Games Distribution (TE)", x="Average Fantasy Points within a Triplet of games", y="", fill="")
ggplot(big_half, aes(fantasyPts.x)) +
geom_histogram(fill="darkorchid4") +
guides(fill="none") +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points in First Half of Season Distribution (TE)", x="Average Fantasy Points in First Half of season", y="", fill="")
ggplot(big_association, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.4)) +
geom_point(color="violet") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points within a game (TE)", x="Fantasy Points within a game", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.4)) +
geom_point(color="darkorchid2") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points within Consecutive Games (TE)", x="Average Fantasy Points within consecutive games", y="Year-End Fantasy Points")
ggplot(big_trios, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.4)) +
geom_point(color="darkorchid3") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points within a Triplet of Games (TE)", x="Average Fantasy Points within a Triplet of games", y="Year-End Fantasy Points")
ggplot(big_half, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=1)) +
geom_point(color="darkorchid4") +
guides(alpha="none") +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points in First Half of Season (TE)", x="Average Fantasy Points in First Half of season", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=fantasyPts.x, y=fantasyPts.y)) +
geom_smooth(data=big_association, method="loess", se=F, color="violet", linewidth=1.25) +
geom_smooth(data=big_pairs, method="loess", se=F, color="darkorchid2", linewidth=1.25) +
geom_smooth(data=big_trios, method="loess", se=F, color="darkorchid3", linewidth=1.25) +
geom_smooth(data=big_half, method="loess", se=F, color="darkorchid4", linewidth=1.25) +
labs(title="Year-End Points by Subsets of Combined games (TE)", x="Avg Fantasy Points in set of games (1,2,3,half)", y="Year-End Fantasy Points")
cor1 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_association$recRec, big_association$fantasyPts.y),
cor(big_association$recYds, big_association$fantasyPts.y),
cor(big_association$recTds, big_association$fantasyPts.y)))
cor2 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_pairs$recRec, big_pairs$fantasyPts.y),
cor(big_pairs$recYds, big_pairs$fantasyPts.y),
cor(big_pairs$recTds, big_pairs$fantasyPts.y)))
cor3 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_trios$recRec, big_trios$fantasyPts.y),
cor(big_trios$recYds, big_trios$fantasyPts.y),
cor(big_trios$recTds, big_trios$fantasyPts.y)))
cor4 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_half$recRec, big_half$fantasyPts.y),
cor(big_half$recYds, big_half$fantasyPts.y),
cor(big_half$recTds, big_half$fantasyPts.y)))
data <- data.frame(variable=c("recRec", "recYds", "recTds"),
OneWeek=cor1$correlation,
TwoWeeks=cor2$correlation,
ThreeWeeks=cor3$correlation,
FirstHalf=cor4$correlation)
data <- pivot_longer(data, cols=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"), names_to="subset", values_to="correlation") #pivoting the data to a longer format to better plot the relationships
data$subset <- factor(data$subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf")) #assigning levels to the subsets to plot them in order
#data
ggplot(data) +
geom_col(aes(x=subset, y=correlation, fill=variable)) +
labs(title="Correlation of Fantasy Points with Year-End Points (TE)", x="", y="Collective Correlation with Year-End Points")
pca_variables <- c('fantasyPts.y', 'rzRecTdPct', 'ezRecTdPct', 'rzRecRecPct', 'rzRecTargPct', "recYds", 'ezRecRecPct', 'ezRecTargPct', 'fantasyPts.x', 'depth')
sum_cor_variables <- c('fantasyPts.x', 'recTds', 'rzRecTds', 'rzRecTdPct', 'ptsPerTouch', 'rzRecRec', 'ezRecTds', 'rzRecTarg', 'ezRecTdPct', 'ptsPerSnap')
one_cor_variables <- c(comatrix1$colnames[1:10]) #intra-week points correlation: correlations with the given week's points
two_cor_variables <- c(comatrix2$colnames[1:10]) #intra-week points correlation
three_cor_variables <- c(comatrix3$colnames[1:10]) #intra-week points correlation
half_cor_variables <- c(comatrix4$colnames[1:10]) #intra-week points correlation
year_end_cor_variables <- c(comatrix5$colnames[1:10]) #inter-week points correlation: correlation with the year-end points
model1 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_association)
model2 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_pairs)
model3 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_trios)
model4 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_half)
data <- big_association %>%
select(-c()) #creating a dataset to make a model
all <- lm(fantasyPts.y ~ ., data=data) #making a model with every variable in the given dataset
OneWeek_model <- step(all, direction = "backward", trace=0) #using a backwards stepwise process to simplify the given model
OneWeek_sum <- summary(OneWeek_model)
data <- big_pairs %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
TwoWeeks_model <- step(all, direction = "backward", trace=0)
TwoWeeks_sum <- summary(TwoWeeks_model)
data <- big_trios %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
ThreeWeeks_model <- step(all, direction = "backward", trace=0)
ThreeWeeks_sum <- summary(ThreeWeeks_model)
data <- big_half %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
FirstHalf_model <- step(all, direction = "backward", trace=0)
FirstHalf_sum <- summary(FirstHalf_model)
FirstHalf_v <- c(OneWeek_sum$adj.r.squared,
data.frame(Names=c(names(coef(OneWeek_model))),
t.value=c(OneWeek_sum$coefficients[,"t value"])) %>%
arrange(desc(t.value))
)
oneweek <- c(OneWeek$adj.r.squared, OneWeek)
FirstHalf_v
model_comparison <- data.frame(Terms=c('Adj_R2'),
OneWeek=OneWeek$adj.r.squared,
TwoWeeks=TwoWeeks$adj.r.squared,
ThreeWeeks=ThreeWeeks$adj.r.squared,
FirstHalf=FirstHalf$adj.r.squared)
model_comparison <- data.frame(Terms=c('Adj_R2'),
OneWeek=OneWeek_sum$adj.r.squared,
TwoWeeks=TwoWeeks_sum$adj.r.squared,
ThreeWeeks=ThreeWeeks_sum$adj.r.squared,
FirstHalf=FirstHalf_sum$adj.r.squared)
model_comparison <- data.frame(Terms=c('Adj_R2'),
OneWeek=OneWeek_sum$adj.r.squared,
TwoWeeks=TwoWeeks_sum$adj.r.squared,
ThreeWeeks=ThreeWeeks_sum$adj.r.squared,
FirstHalf=FirstHalf_sum$adj.r.squared)
model_comparison
model_comparison <- data.frame(OneWeek=OneWeek_sum$adj.r.squared,
TwoWeeks=TwoWeeks_sum$adj.r.squared,
ThreeWeeks=ThreeWeeks_sum$adj.r.squared,
FirstHalf=FirstHalf_sum$adj.r.squared)
ggplot(model_comparison) +
geom_col(aes(x=OneWeek))
model_comparison <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(OneWeek_sum$adj.r.squared,
TwoWeeks_sum$adj.r.squared,
ThreeWeeks_sum$adj.r.squared,
FirstHalf_sum$adj.r.squared))
ggplot(model_comparison) +
geom_col(aes(x=Subset, y=Adj.R.Squared))
model_comparison <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(OneWeek_sum$adj.r.squared,
TwoWeeks_sum$adj.r.squared,
ThreeWeeks_sum$adj.r.squared,
FirstHalf_sum$adj.r.squared))
model_comparison$Subset <- factor(model_comparison$subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
model_comparison <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(OneWeek_sum$adj.r.squared,
TwoWeeks_sum$adj.r.squared,
ThreeWeeks_sum$adj.r.squared,
FirstHalf_sum$adj.r.squared))
model_comparison$Subset <- factor(model_comparison$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(model_comparison) +
geom_col(aes(x=Subset, y=Adj.R.Squared))
model_comparison <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(OneWeek_sum$adj.r.squared,
TwoWeeks_sum$adj.r.squared,
ThreeWeeks_sum$adj.r.squared,
FirstHalf_sum$adj.r.squared))
model_comparison$Subset <- factor(model_comparison$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(model_comparison) +
geom_col(aes(x=Subset, y=Adj.R.Squared)) +
labs(title="Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
model_comparison <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(OneWeek_sum$adj.r.squared,
TwoWeeks_sum$adj.r.squared,
ThreeWeeks_sum$adj.r.squared,
FirstHalf_sum$adj.r.squared))
model_comparison$Subset <- factor(model_comparison$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(model_comparison) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
model_comparison <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(OneWeek_sum$adj.r.squared,
TwoWeeks_sum$adj.r.squared,
ThreeWeeks_sum$adj.r.squared,
FirstHalf_sum$adj.r.squared))
model_comparison$Subset <- factor(model_comparison$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(model_comparison) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Stepwise Regression Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
model1 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_association)
model1_sum <- summary(model1)
model2 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_pairs)
model2_sum <- summary(model2)
model3 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_trios)
model3_sum <- summary(model3)
model4 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_half)
model4_sum <- summary(model4)
data <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(model1_sum$adj.r.squared,
model2_sum$adj.r.squared,
model3_sum$adj.r.squared,
model4_sum$adj.r.squared))
data$Subset <- factor(data$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(data) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Basic Model Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
anova(model1, model2)
data <- big_association %>%
select(-c()) #creating a dataset to make a model
all <- lm(fantasyPts.y ~ ., data=data) #making a model with every variable in the given dataset
step_model1 <- step(all, direction = "backward", trace=0) #using a backwards stepwise process to simplify the given model
step_model1_sum <- summary(step_model1)
data <- big_pairs %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
step_model2 <- step(all, direction = "backward", trace=0)
step_model2_sum <- summary(step_model2)
data <- big_trios %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
step_model3 <- step(all, direction = "backward", trace=0)
step_model3_sum <- summary(step_model3)
data <- big_half %>%
select(-c())
all <- lm(fantasyPts.y ~ ., data=data)
step_model4 <- step(all, direction = "backward", trace=0)
step_model4_sum <- summary(step_model4)
data <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(step_model1_sum$adj.r.squared,
step_model2_sum$adj.r.squared,
step_model3_sum$adj.r.squared,
step_model4_sum$adj.r.squared))
data$Subset <- factor(data$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(data) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Stepwise Regression Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
anova(model1, step_model1)
comp1 <- anova(model1, step_model1)
comp1$Pr(>F)
comp1$'Pr(>F)''
comp1$`Pr(>F)`
comp1 <- anova(model1, step_model1)
comp2 <- anova(model1, step_model2)
comp3 <- anova(model1, step_model3)
comp4 <- anova(model1, step_model4)
comp1 <- anova(model1, step_model1)
comp2 <- anova(model2, step_model2)
comp3 <- anova(model3, step_model3)
comp4 <- anova(model4, step_model4)
comp1
comp1$`Pr(>F)`
comp2$`Pr(>F)`
comp3$`Pr(>F)`
comp4$`Pr(>F)`
step_model1_sum
model1 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_association)
model1_sum <- summary(model1)
model2 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_pairs)
model2_sum <- summary(model2)
model3 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_trios)
model3_sum <- summary(model3)
model4 <- lm(fantasyPts.y ~ fantasyPts.x, data=big_half)
model4_sum <- summary(model4)
data <- data.frame(Subset=c('OneWeek', 'TwoWeeks', 'ThreeWeeks', 'FirstHalf'),
Adj.R.Squared=c(model1_sum$adj.r.squared,
model2_sum$adj.r.squared,
model3_sum$adj.r.squared,
model4_sum$adj.r.squared))
data$Subset <- factor(data$Subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"))
ggplot(data) +
geom_col(aes(x=Subset, y=Adj.R.Squared), fill="darkorchid4") +
labs(title="Basic Model Comparison of Adjusted R Squared", x="Sample Size of Weeks", y="")
comp1 <- anova(model1, step_model1)
comp2 <- anova(model2, step_model2)
comp3 <- anova(model3, step_model3)
comp4 <- anova(model4, step_model4)
