filter(n() == 3) %>%
summarise(across(.fns=mean))
weeks_trio15_21 <- rbind(wk15_21, wk16_21, wk17_21) %>%
group_by(player) %>%
filter(n() == 3) %>%
summarise(across(.fns=mean))
trios_23 <- rbind(weeks_trio1_23,weeks_trio2_23,weeks_trio3_23,weeks_trio4_23,weeks_trio5_23,weeks_trio6_23,weeks_trio7_23,weeks_trio8_23,weeks_trio9_23,weeks_trio10_23,
weeks_trio11_23,weeks_trio12_23,weeks_trio13_23,weeks_trio14_23,weeks_trio15_23)
trios_23 <- merge(trios_23, total_23, by="player", all=T, suffixes=c(".x", ".y"))
trios_22 <- rbind(weeks_trio1_22,weeks_trio2_22,weeks_trio3_22,weeks_trio4_22,weeks_trio5_22,weeks_trio6_22,weeks_trio7_22,weeks_trio8_22,weeks_trio9_22,weeks_trio10_22,
weeks_trio11_22,weeks_trio12_22,weeks_trio13_22,weeks_trio14_22,weeks_trio15_22)
trios_22 <- merge(trios_22, total_22, by="player", all=T, suffixes=c(".x", ".y"))
trios_21 <- rbind(weeks_trio1_21,weeks_trio2_21,weeks_trio3_21,weeks_trio4_21,weeks_trio5_21,weeks_trio6_21,weeks_trio7_21,weeks_trio8_21,weeks_trio9_21,weeks_trio10_21,
weeks_trio11_21,weeks_trio12_21,weeks_trio13_21,weeks_trio14_21,weeks_trio15_21)
trios_21 <- merge(trios_21, total_21, by="player", all=T, suffixes=c(".x", ".y"))
big_trios <- rbind(trios_23, trios_22, trios_21) %>%
select(-c(player)) %>%
na.omit() %>%
round(2)
#glimpse(big_trios)
half_23 <- rbind(wk1_23,wk2_23,wk3_23,wk4_23,wk5_23,wk6_23,wk7_23,wk8_23,wk9_23) %>%
group_by(player) %>%
filter(n() >= 5) %>%
summarise(across(.fns=mean))
half_23 <- merge(half_23, total_23, by="player", all=T, suffixes=c(".x", ".y"))
half_22 <- rbind(wk1_22,wk2_22,wk3_22,wk4_22,wk5_22,wk6_22,wk7_22,wk8_22,wk9_22) %>%
group_by(player) %>%
filter(n() >= 5) %>%
summarise(across(.fns=mean))
half_22 <- merge(half_22, total_22, by="player", all=T, suffixes=c(".x", ".y"))
half_21 <- rbind(wk1_21,wk2_21,wk3_21,wk4_21,wk5_21,wk6_21,wk7_21,wk8_21,wk9_21) %>%
group_by(player) %>%
filter(n() >= 5) %>%
summarise(across(.fns=mean))
half_21 <- merge(half_21, total_21, by="player", all=T, suffixes=c(".x", ".y"))
big_half <- rbind(half_23, half_22, half_21) %>%
select(-c(player)) %>%
na.omit() %>%
round(2)
#glimpse(big_half)
cv <- function(x) {           # Coefficient of Variation, a relative measure of variation dependent upon a variable's average
m <- mean(x)
sd <- sd(x)
cv <- sd/m
return(cv)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco)
arrange(comatrix, desc(cor.y))
pca <- prcomp(big_association) #perform PCA on weekly data
summary <- summary(pca) #shows the cumulative proportion of each Principal Component (PC4 > 0.85)
loadings <- arrange(round(data.frame(pca$rotation)[1:4], 3), desc(PC1)) #show the loadings of the first four Principal Components (PCs)
eigenvalues <- pca$sdev^2 #extract the eigenvalues
contribution <- arrange(round((loadings^2)*eigenvalues, 3), desc(PC1)) #show the contributions of each variable towards the given Principal Component
contribution <- round(mutate(contribution, sum=PC1*0.3801 + PC2*0.3031 + PC3*0.1089 + PC4*0.0626), 3) #add a summation column to show the weight of each variable in the first four PCs
contribution
df <- select(big_association, -c(rushYds100Games, rushTd40s)) #create a data frame that excludes two variables containing NA values
cor_matrix <- data.frame(cor(df)) #convert df into correlation matrix
summed_cor <- data.frame(sum=rowSums(cor_matrix)) #sum all rows
arrange(round(summed_cor, 3), desc(sum))
data <- big_association %>%
select(c(recRec, recYds, recTds, fantasyPts.x))
plot <- cor(data)
corrplot(plot, method = 'color', order = 'AOE', diag = FALSE) #creating a correlogram
ggplot(subset(big_association, recTds<3), aes(x=factor(recTds), y=fantasyPts.x)) +
geom_violin(fill="darkorchid4") +
labs(title="Receiving Tds and Fantasy Points (TE)", x="Receiving Touchdowns within game", y="Fantasy Points within game")
ggplot(big_association, aes(x=catch, y=fantasyPts.x)) +
geom_smooth(data=subset(big_association, recTarg>1), method="loess", se=F, color="violet", linewidth=1.25) +
geom_smooth(data=subset(big_association, recTarg>3), method="loess", se=F, color="darkorchid2", linewidth=1.25) +
geom_smooth(data=subset(big_association, recTarg>5), method="loess", se=F, color="darkorchid3", linewidth=1.25) +
geom_smooth(data=subset(big_association, recTarg>7), method="loess", se=F, color="darkorchid4", linewidth=1.25) +
labs(title="Catch Percentage and Fantasy Points (TE)", x="Catch Percentage within a game for varying Targets>(1,3,5,7)", y="Fantasy Points within a game")
ggplot(big_association, aes(fantasyPts.x, fill="darkorchid4")) +
geom_histogram() +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points within a Game Distribution (TE)", x="Fantasy Points within a game", y="", fill="")
ggplot(big_pairs, aes(fantasyPts.x, fill="darkorchid4")) +
geom_histogram() +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points within Consecutive Games Distribution (TE)", x="Average Fantasy Points within consecutive games", y="", fill="")
ggplot(big_trios, aes(fantasyPts.x, fill="darkorchid4")) +
geom_histogram() +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points within Triplet of Games Distribution (TE)", x="Average Fantasy Points within a Triplet of games", y="", fill="")
ggplot(big_half, aes(fantasyPts.x, fill="darkorchid4")) +
geom_histogram() +
geom_vline(xintercept=7.5, linetype="dashed", color="black", linewidth=1.25) +
labs(title="Fantasy Points in First Half of Season Distribution (TE)", x="Average Fantasy Points in First Half of season", y="", fill="")
ggplot(big_association, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.33)) +
geom_point() +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points within a game (TE)", x="Fantasy Points within a game", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.33)) +
geom_point() +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points within Consecutive Games (TE)", x="Average Fantasy Points within consecutive games", y="Year-End Fantasy Points")
ggplot(big_trios, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.33)) +
geom_point() +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points within a Triplet of Games (TE)", x="Average Fantasy Points within a Triplet of games", y="Year-End Fantasy Points")
ggplot(big_half, aes(x=fantasyPts.x, y=fantasyPts.y, alpha=.33)) +
geom_point() +
scale_size(range=c(1,3)) +
geom_smooth(method="loess") +
labs(title="Year-End Points by Fantasy Points in First Half of Season (TE)", x="Average Fantasy Points in First Half of season", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=recTarg, y=fantasyPts.y)) +
geom_smooth(data=subset(big_pairs, recTds<.5), method="loess", se=F, color="darkorchid2", linewidth=1.25) +
geom_smooth(data=subset(big_pairs, recTds>.5), method="loess", se=F, color="darkorchid4", linewidth=1.25) +
labs(title="Year-End Points by Receiving Targets consecutive games (TE)", x="Avg Targets in consecutive games (0.5<)TDs(>0.5)", y="Year-End Fantasy Points")
ggplot(big_pairs, aes(x=recRec, y=fantasyPts.y)) +
geom_smooth(data=subset(big_pairs, recTds<.5), method="loess", se=F, color="darkorchid2", linewidth=1.25) +
geom_smooth(data=subset(big_pairs, recTds>.5), method="loess", se=F, color="darkorchid4", linewidth=1.25) +
labs(title="Year-End Points by Receptions consecutive games (TE)", x="Avg Receptions in consecutive games (0.5<)TDs(>0.5)", y="Year-End Fantasy Points")
ggplot(subset(big_pairs, recTds<2), aes(x=factor(recTds), y=fantasyPts.y)) +
geom_violin(fill="darkorchid4", width=1) +
labs(title="Receiving Tds and Fantasy Points in consecutive games (TE)", x="Avg Receiving Touchdowns in consecutive games", y="Year-End Fantsy Points")
ggplot(subset(big_pairs, recTds<2), aes(x=factor(recTds), y=fantasyPts.y)) +
geom_violin(fill="darkorchid4", scale="count", width=2) +
labs(title="Receiving Tds and Fantasy Points in consecutive games (TE)", x="Avg Receiving Touchdowns in consecutive games", y="Year-End Fantsy Points")
ggplot(big_association, aes(x=factor(recTarg), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Receiving Targets within a single game (TE)", x="Targets within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(x=factor(recRec), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Receptions within a single game (TE)", x="Receptions within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(x=factor(rzRecTarg), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Redzone Receiving Targets within a single game (TE)", x="Redzone Targets within game", y="Year-End Fantasy Points")
ggplot(big_association, aes(x=factor(rzRecRec), y=fantasyPts.y)) +
geom_boxplot(fill="darkorchid4") +
labs(title="Year-End Points by Redzone Receptions within a single game (TE)", x="Redzone Recpetions within game", y="Year-End Fantasy Points")
cor1 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_association$recRec, big_association$fantasyPts.y),
cor(big_association$recYds, big_association$fantasyPts.y),
cor(big_association$recTds, big_association$fantasyPts.y)))
cor2 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_pairs$recRec, big_pairs$fantasyPts.y),
cor(big_pairs$recYds, big_pairs$fantasyPts.y),
cor(big_pairs$recTds, big_pairs$fantasyPts.y)))
cor3 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_trios$recRec, big_trios$fantasyPts.y),
cor(big_trios$recYds, big_trios$fantasyPts.y),
cor(big_trios$recTds, big_trios$fantasyPts.y)))
cor4 <- data.frame(variable=c("recRec", "recYds", "recTds"),
correlation=c(cor(big_half$recRec, big_half$fantasyPts.y),
cor(big_half$recYds, big_half$fantasyPts.y),
cor(big_half$recTds, big_half$fantasyPts.y)))
data <- data.frame(variable=c("recRec", "recYds", "recTds"),
OneWeek=cor1$correlation,
TwoWeeks=cor2$correlation,
ThreeWeeks=cor3$correlation,
FirstHalf=cor4$correlation)
data <- pivot_longer(data, cols=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf"), names_to="subset", values_to="correlation") #pivoting the data to a longer format to better plot the relationships
data$subset <- factor(data$subset, levels=c("OneWeek", "TwoWeeks", "ThreeWeeks", "FirstHalf")) #assigning levels to the subsets to plot them in order
#data
ggplot(data) +
geom_col(aes(x=subset, y=correlation, fill=variable))
model <- lm(fantasyPts.x ~ recRec + recYds + recTds, data=big_association)
#summary(model)
data <- big_association %>%
select(-c(recRec, recYds, recTds, fantasyPts.y)) %>%
na.omit() #creating a dataset to make a model
all <- lm(fantasyPts.x ~ ., data=data) #making a model with every variable in the given dataset
model <- step(all, direction = "backward", trace=0) #using a backwards stepwise process to simplify the given model
#summary(model)
data <- big_association %>%
select(c(recTarg, catch, rzRecTarg, rzRecTdPct, ptsPerTouch, fantasyPts.x)) %>%
na.omit()
all <- lm(fantasyPts.x ~ ., data=data)
model <- step(all, direction = "backward", trace=0)
#summary(model)
data <- big_association %>%
select(-c(fantasyPts.x)) %>%
na.omit()
all <- lm(fantasyPts.y ~ ., data=data)
model <- step(all, direction = "backward", trace=0)
#summary(model)
model1 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_association)
model2 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_pairs)
model3 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_trios)
model4 <- lm(fantasyPts.y ~ recRec + recYds + recTds, data=big_half)
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Quantile based Skewness
first <- quantile(x, .25)
second <- median(x)
third <- quantile(x, .75)
skew <- (first+thrid-2*second)/(first-third)
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Quantile based Skewness
first <- quantile(x, .25)
second <- median(x)
third <- quantile(x, .75)
skew <- (first+third-2*second)/(first-third)
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco)
arrange(comatrix, desc(cor.y))
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Quantile based Skewness
first <- quantile(x, .25)
second <- median(x)
third <- quantile(x, .75)
skew <- (first+third-2*second)/(third-first)
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
arrange(comatrix, desc(cor.y))
skew <- function(x) { #Quantile based Skewness
first <- quantile(x, .25, na.rm=T)
second <- median(x, na.rm=T)
third <- quantile(x, .75, na.rm=T)
skew <- (first+third-2*second)/(third-first)
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
arrange(comatrix, desc(cor.y))
skew <- function(x) { #Quantile based Skewness
first <- quantile(x, .25, na.rm=T)
second <- median(x, na.rm=T)
third <- quantile(x, .75, na.rm=T)
skew <- (first+third-(2*second))/(third-first)
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
arrange(comatrix, desc(cor.y))
quantile(big_association$recTds, .25)
quantile(big_association$recTds, .75)
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x, na.rm=T)
mode <- mode(x, na.rm=T)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x, na.rm=T)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- function(x) {
unique <- unique(x)
unique[which.max(tabulate(match(x, unique)))]
}
mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- function(x) {
x <- na.omit(x)
unique <- unique(x)
unique[which.max(tabulate(match(x, unique)))]
}
mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's median skewness
mean <- mean(x)
median <- median(x)
sd <- sd(x)
skew <- (mean-median)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
arrange(comatrix, desc(cor.y))
plot(big_association$rzRecTarg)
barplot(big_association$rzRecTarg)
barplot(big_association$ezRecTarg)
hist(big_association$fantasyPts.x)
hist(big_association$rzRecTarg)
mean(big_association$rzRecTarg)
median(big_association$rzRecTarg)
mode <- function(x) {
x <- na.omit(x)
unique <- unique(x)
mode <- unique[which.max(tabulate(match(x, unique)))]
return(mode)
}
mode(big_association$rzRecTarg)
skew <- function(x) { #Pearson's median skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
arrange(comatrix, desc(cor.y))
mode <- function(x) {
x <- na.omit(x)
u <- unique(x)
mode <- u[which.max(tabulate(match(x, u)))]
return(mode)
}
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
arrange(comatrix, desc(cor.y))
df <- select(big_association, -c(rushYds100Games, rushTd40s)) #create a data frame that excludes two variables containing NA values
cor_matrix <- data.frame(cor(df)) #convert df into correlation matrix
summed_cor <- data.frame(sum=rowSums(cor_matrix)) #sum all rows
arrange(round(summed_cor, 3), desc(sum))
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
comatrix2 <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
comatrix2 <- arrange(comatrix, desc(cor.y))
comatrix2
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix1 <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
comatrix1 <- arrange(comatrix, desc(cor.y))
comatrix1
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
comatrix2 <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew)
comatrix2 <- arrange(comatrix, desc(cor.y))
comatrix2
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_association))
cor.x <- c(round(cor(big_association, big_association$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_association, big_association$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_association, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_association, 2, skew), 3)) #skew measure for each variable
comatrix1 <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew) %>% arrange(desc(cor.y))
comatrix1
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
skew <- function(x) { #Pearson's mode skewness
mean <- mean(x)
mode <- mode(x)
sd <- sd(x)
skew <- (mean-mode)/sd
return(skew)
}
colnames <- c(colnames(big_pairs))
cor.x <- c(round(cor(big_pairs, big_pairs$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_pairs, big_pairs$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_pairs, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_pairs, 2, skew), 3)) #skew measure for each variable
comatrix2 <- data.frame(colnames=colnames, cor.x=cor.x, cor.y=cor.y, varco=varco, skew=skew) %>% arrange(desc(cor.y))
comatrix2
colnames <- c(colnames(big_trios))
cor.x <- c(round(cor(big_trios, big_trios$fantasyPts.x, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given week's points
cor.y <- c(round(cor(big_trios, big_trios$fantasyPts.y, use="complete.obs"), 3))  #making a vector of correlations between a given variable and the given year's points
varco <- c(round(apply(big_trios, 2, cv), 3)) #coef of variation for each variable
skew <- c(round(apply(big_trios, 2, skew), 3)) #skew measure for each variable
getwd()
